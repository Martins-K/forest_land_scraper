name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true # This helps enable Pages if not already enabled

      - name: Create landing page
        run: |
          mkdir -p public
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Land Scraper Data</title>
              <style>
                  body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                  .header { background: #f5f5f5; padding: 20px; border-radius: 5px; margin-bottom: 20px; }
                  .download-btn { background: #007acc; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px 0; }
                  .info { background: #e7f3ff; padding: 15px; border-radius: 5px; margin: 20px 0; }
                  .file-list { background: #f9f9f9; padding: 15px; border-radius: 5px; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üèûÔ∏è Land Scraper Data</h1>
                  <p>Latest scraped land listings from ss.com</p>
              </div>
              
              <div class="info">
                  <p><strong>Last updated:</strong> <span id="lastUpdated">Loading...</span></p>
                  <p>This data is updated automatically every 24 hours using GitHub Actions.</p>
              </div>
              
              <h2>Download Data</h2>
              <div class="file-list">
                  <a href="lands-scraped.xlsx" class="download-btn">üìä Download Excel File</a>
                  <p><small>Contains all scraped land listings with historical data.</small></p>
              </div>
              
              <h2>About</h2>
              <p>This project scrapes land listings from ss.com across all regions of Latvia and compiles them into an Excel file.</p>
              
              <script>
                  // Display last commit time as last updated
                  fetch('https://api.github.com/repos/${{ github.repository }}/commits?path=lands-scraped.xlsx&per_page=1')
                      .then(response => response.json())
                      .then(commits => {
                          if (commits.length > 0) {
                              const date = new Date(commits[0].commit.committer.date);
                              document.getElementById('lastUpdated').textContent = date.toLocaleString();
                          } else {
                              document.getElementById('lastUpdated').textContent = 'No data yet';
                          }
                      })
                      .catch(() => {
                          document.getElementById('lastUpdated').textContent = 'Error loading date';
                      });
              </script>
          </body>
          </html>
          EOF

          # Copy the Excel file to public directory if it exists
          if [ -f "lands-scraped.xlsx" ]; then
            cp lands-scraped.xlsx public/
            echo "‚úÖ Excel file copied to public directory"
          else
            echo "‚ö†Ô∏è  No Excel file found to deploy"
            # Create a placeholder message
            cat > public/no-data.html << 'EOF'
            <!DOCTYPE html>
            <html>
            <head><title>No Data Yet</title></head>
            <body>
                <h1>No data available yet</h1>
                <p>The scraper hasn't run yet or no data has been collected.</p>
                <p>Check back later after the scheduled job runs.</p>
            </body>
            </html>
            EOF
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./public"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
